//frontend/src/services/councilService.js


// üìã L·∫•y danh s√°ch h·ªôi ƒë·ªìng
export const getCouncilList = async (token) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/list`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch h·ªôi ƒë·ªìng!");
  }

  return response.json();
};

// üìã L·∫•y th√¥ng tin h·ªôi ƒë·ªìng c·ªßa m·ªôt ƒë·ªÅ t√†i
export const getCouncilInfo = async (token, topicId = null) => {
  const url = topicId
    ? `${import.meta.env.VITE_API_URL}/council/list?topicId=${encodeURIComponent(topicId)}`
    : `${import.meta.env.VITE_API_URL}/council/list`;
  const response = await fetch(url, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin h·ªôi ƒë·ªìng!");
  }

  const councils = await response.json();
  if (topicId) {
    const council = councils.find((c) => c.topic._id === topicId);
    if (!council) {
      throw new Error("Kh√¥ng t√¨m th·∫•y h·ªôi ƒë·ªìng!");
    }
    return council;
  }
  return councils;
};

// üë®‚Äçüè´ L·∫•y danh s√°ch gi·∫£ng vi√™n
export const getTeachers = async (token) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/user/teachers`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch gi·∫£ng vi√™n!");
  }

  return response.json();
};

// üèõÔ∏è G·ª≠i y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng
export const createCouncil = async (token, topicId, chairmanId, secretaryId, memberIds) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/request-create`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ topicId, chairmanId, secretaryId, memberIds }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "G·ª≠i y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng th·∫•t b·∫°i!");
  }

  return response.json();
};

// ‚úèÔ∏è C·∫≠p nh·∫≠t y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng
export const updateCouncil = async (token, councilId, chairmanId, secretaryId, memberIds) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/update`, {
    method: "PUT",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ councilId, chairmanId, secretaryId, memberIds, status: "pending-creation" }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "C·∫≠p nh·∫≠t y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng th·∫•t b·∫°i!");
  }

  return response.json();
};

// üóëÔ∏è X√≥a y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng
export const deleteCouncil = async (token, councilId) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/delete`, {
    method: "DELETE",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ councilId }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "X√≥a y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng th·∫•t b·∫°i!");
  }

  return response.json();
};

// üìù Ch·∫•m ƒëi·ªÉm h·ªôi ƒë·ªìng
export const submitScore = async (token, councilId, score, comment) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/score`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ councilId, score: Number(score), comment }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ ch·∫•m ƒëi·ªÉm!");
  }

  return response.json();
};

// üìö L·∫•y danh s√°ch h·ªôi ƒë·ªìng c√¥ng khai
export const getCouncilPublicList = async (token) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/public-list`, {
    headers: { Authorization: `Bearer ${token}` },
  });
  if (!response.ok) {
    const error = await response.json();
    throw new Error(error.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch h·ªôi ƒë·ªìng!");
  }
  return response.json();
};

// üì• T·∫£i file b√°o c√°o
export const downloadReport = async (token, reportId) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/report/${reportId}/download`, {
    headers: { Authorization: `Bearer ${token}` },
  });
  if (!response.ok) {
    const error = await response.json();
    throw new Error(error.message || "Kh√¥ng th·ªÉ t·∫£i b√°o c√°o!");
  }
  const blob = await response.blob();
  return { data: blob, headers: Object.fromEntries(response.headers.entries()) };
};

// üìã L·∫•y danh s√°ch y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng
export const getPendingCouncilRequests = async (token) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/pending-requests`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng!");
  }

  return response.json();
};

// ‚úÖ Ph√™ duy·ªát y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng
export const approveCouncilRequest = async (token, requestId) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/uniadmin-approve-request`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ requestId }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Ph√™ duy·ªát y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng th·∫•t b·∫°i!");
  }

  return response.json();
};

// ‚ùå T·ª´ ch·ªëi y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng
export const rejectCouncilRequest = async (token, requestId, reason) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/uniadmin-reject-request`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ requestId, reason }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "T·ª´ ch·ªëi y√™u c·∫ßu t·∫°o h·ªôi ƒë·ªìng th·∫•t b·∫°i!");
  }

  return response.json();
};

// üìÑ T·∫£i t√†i li·ªáu ph√™ duy·ªát
export const downloadApprovalDocument = async (token, councilId) => {
  const response = await fetch(`${import.meta.env.VITE_API_URL}/council/approval-document/${councilId}`, {
    headers: { Authorization: `Bearer ${token}` },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ t·∫£i t√†i li·ªáu ph√™ duy·ªát!");
  }

  const blob = await response.blob();
  return { data: blob, headers: Object.fromEntries(response.headers.entries()) };
};