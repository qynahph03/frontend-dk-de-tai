const API_URL = "http://localhost:5000/api";

// üìã L·∫•y danh s√°ch th·∫£o lu·∫≠n
export const fetchDiscussions = async (token, page = 1, limit = 10) => {
  const response = await fetch(`${API_URL}/discussion/messages?page=${page}&limit=${limit}`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch th·∫£o lu·∫≠n!");
  }

  return response.json();
};

// üìã L·∫•y chi ti·∫øt m·ªôt cu·ªôc th·∫£o lu·∫≠n
export const fetchDiscussionById = async (token, discussionId) => {
  const response = await fetch(`${API_URL}/discussion/messages?page=1&limit=100`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ l·∫•y chi ti·∫øt th·∫£o lu·∫≠n!");
  }

  const data = await response.json();
  const discussion = data.discussions.find(d => d.discussionId === discussionId);
  if (!discussion) {
    throw new Error("Cu·ªôc th·∫£o lu·∫≠n kh√¥ng t·ªìn t·∫°i!");
  }
  return discussion;
};

// ‚úâÔ∏è G·ª≠i tin nh·∫Øn m·ªõi
export const sendMessage = async (token, discussionId, message) => {
  const response = await fetch(`${API_URL}/discussion/message`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ discussionId, message }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn!");
  }

  return response.json();
};

// üìù T·∫°o cu·ªôc th·∫£o lu·∫≠n m·ªõi
export const startDiscussion = async (token, topicId) => {
  const response = await fetch(`${API_URL}/discussion/start`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ topicId }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ t·∫°o cu·ªôc th·∫£o lu·∫≠n!");
  }

  return response.json();
};

// üóëÔ∏è X√≥a tin nh·∫Øn
export const deleteMessage = async (token, discussionId, messageId) => {
  const response = await fetch(`${API_URL}/discussion/message`, {
    method: "DELETE",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({ discussionId, messageId }),
  });

  if (!response.ok) {
    const errorData = await response.json();
    throw new Error(errorData.message || "Kh√¥ng th·ªÉ x√≥a tin nh·∫Øn!");
  }

  return response.json();
};