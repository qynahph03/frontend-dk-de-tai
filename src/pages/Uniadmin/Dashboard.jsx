import React, { useEffect, useState } from "react";
import Sidebar from "../../components/Sidebar/Sidebar";
import { useAuth } from "../../context/AuthContext";
import { getCouncilList } from "../../services/councilService";
import { getNotifications, markAllNotificationsAsRead } from "../../services/notificationService";
import { toast } from "react-toastify";
import "../../assets/css/uniadmin/dashboard.css"; // T√°i s·ª≠ d·ª•ng CSS c·ªßa admin

const UniadminDashboard = () => {
  const { user } = useAuth();
  const [overview, setOverview] = useState({
    councilCount: 0,
    pendingCouncils: 0,
    approvedCouncils: 0,
    rejectedCouncils: 0,
    unreadNotifications: 0,
  });
  const [councils, setCouncils] = useState([]);
  const [notifications, setNotifications] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const loadData = async () => {
    setIsLoading(true);
    try {
      // L·∫•y danh s√°ch h·ªôi ƒë·ªìng
      const councilData = await getCouncilList(user.token);
      const pendingCouncils = councilData.filter((council) => council.status === "pending-uniadmin");
      const approvedCouncils = councilData.filter((council) => council.status === "uniadmin-approved");
      const rejectedCouncils = councilData.filter((council) => council.status === "uniadmin-rejected");

      setOverview({
        councilCount: councilData.length,
        pendingCouncils: pendingCouncils.length,
        approvedCouncils: approvedCouncils.length,
        rejectedCouncils: rejectedCouncils.length,
        unreadNotifications: notifications.filter((notif) => !notif.isRead).length,
      });
      setCouncils(councilData.slice(0, 5)); // Gi·ªõi h·∫°n 5 h·ªôi ƒë·ªìng

      // L·∫•y danh s√°ch th√¥ng b√°o
      const notificationData = await getNotifications(user.token);
      setNotifications(notificationData.slice(0, 5)); // Gi·ªõi h·∫°n 5 th√¥ng b√°o
    } catch (error) {
      console.error("L·ªói khi t·∫£i d·ªØ li·ªáu:", error.message);
      toast.error(error.message);
    } finally {
      setIsLoading(false);
    }
  };

  const handleMarkAllAsRead = async () => {
    try {
      await markAllNotificationsAsRead(user.token);
      const updatedNotifications = notifications.map((notif) => ({
        ...notif,
        isRead: true,
      }));
      setNotifications(updatedNotifications);
      setOverview((prev) => ({ ...prev, unreadNotifications: 0 }));
      toast.success("ƒê√£ ƒë√°nh d·∫•u t·∫•t c·∫£ th√¥ng b√°o l√† ƒë√£ ƒë·ªçc!");
    } catch (error) {
      console.error("L·ªói khi ƒë√°nh d·∫•u ƒë√£ ƒë·ªçc:", error.message);
      toast.error(error.message);
    }
  };

  const handleViewCouncil = () => {
    window.location.href = "/uniadmin/council-approval";
  };

  useEffect(() => {
    if (user?.token) {
      loadData();
    }
  }, [user]);

  return (
    <div id="uniadmin-dashboard" className="admin-dashboard-container">
      <Sidebar role="uniadmin" />
      <div className="admin-dashboard-content">
        <h2>üìä Dashboard Qu·∫£n tr·ªã c·∫•p cao</h2>

        {/* T·ªïng quan */}
        <div className="admin-overview-section">
          <div className="admin-overview-card">
            <h4>T·ªïng s·ªë h·ªôi ƒë·ªìng</h4>
            <p>{overview.councilCount}</p>
          </div>
          <div className="admin-overview-card">
            <h4>Th√¥ng b√°o ch∆∞a ƒë·ªçc</h4>
            <p>{overview.unreadNotifications}</p>
          </div>
        </div>

        {/* Th√¥ng b√°o */}
        <div className="admin-notifications-section">
          <div className="admin-notifications-header">
            <h3>üîî Th√¥ng b√°o g·∫ßn ƒë√¢y</h3>
            {notifications.some((notif) => !notif.isRead) && (
              <button className="admin-mark-read-btn" onClick={handleMarkAllAsRead}>
                ƒê√°nh d·∫•u t·∫•t c·∫£ ƒë√£ ƒë·ªçc
              </button>
            )}
          </div>
          {isLoading ? (
            <p>ƒêang t·∫£i...</p>
          ) : notifications.length === 0 ? (
            <p>Ch∆∞a c√≥ th√¥ng b√°o n√†o.</p>
          ) : (
            <div className="admin-notification-cards">
              {notifications.map((notification) => (
                <div
                  key={notification._id}
                  className={`admin-notification-card ${notification.isRead ? "read" : "unread"}`}
                >
                  <p>{notification.message}</p>
                  <small>{new Date(notification.createdAt).toLocaleString()}</small>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* H·ªôi ƒë·ªìng g·∫ßn ƒë√¢y */}
        <div className="admin-topics-section">
          <h3>üìã H·ªôi ƒë·ªìng g·∫ßn ƒë√¢y</h3>
          {isLoading ? (
            <p>ƒêang t·∫£i...</p>
          ) : councils.length === 0 ? (
            <p>Ch∆∞a c√≥ h·ªôi ƒë·ªìng n√†o.</p>
          ) : (
            <div className="admin-topic-cards">
              {councils.map((council) => (
                <div
                  key={council._id}
                  className="admin-topic-card"
                  onClick={() => handleViewCouncil()}
                >
                  <h4>{council.topic?.topicName}</h4>
                  <p>Ch·ªß t·ªãch: {council.chairman?.name || "Ch∆∞a c√≥"}</p>
                  <p>Th∆∞ k√Ω: {council.secretary?.name || "Ch∆∞a c√≥"}</p>
                  <p>Tr·∫°ng th√°i: {council.status}</p>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default UniadminDashboard;